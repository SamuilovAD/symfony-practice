parameters: {}
services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # === Factory method ===
    App\GofPatterns\FactoryMethod\Infrastructure\Adapter\In\Console\FactoryMethodCommand: ~
    App\GofPatterns\FactoryMethod\Infrastructure\Adapter\Out\NotifierFactory: ~
    App\GofPatterns\FactoryMethod\Domain\Service\NotifierFactoryInterface:
        alias: App\GofPatterns\FactoryMethod\Infrastructure\Adapter\Out\NotifierFactory
    App\GofPatterns\FactoryMethod\Application\UseCase\SendNotificationHandler: ~
    App\GofPatterns\FactoryMethod\Application\UseCase\SendNotificationHandlerInterface:
        alias: App\GofPatterns\FactoryMethod\Application\UseCase\SendNotificationHandler

    # === Abstract factory ===
    App\GofPatterns\AbstractFactory\Infrastructure\Adapter\In\Console\AbstractFactoryCommand: ~
    App\GofPatterns\AbstractFactory\Infrastructure\Adapter\Out\Provider\Stripe\StripeProviderFactory:
        tags:
            - { name: 'billing.payment_provider_factory', key: 'stripe' }
    App\GofPatterns\AbstractFactory\Infrastructure\Adapter\Out\Provider\Paypal\PaypalProviderFactory:
        tags:
            - { name: 'billing.payment_provider_factory', key: 'paypal' }
    App\GofPatterns\AbstractFactory\Infrastructure\Adapter\Out\Provider\ProviderSelectorFactory:
        arguments:
            $factories: !tagged_iterator { tag: 'billing.payment_provider_factory', index_by: 'key' }
    App\GofPatterns\AbstractFactory\Application\Port\Out\Factory\ProviderSelectorFactoryInterface:
        alias: App\GofPatterns\AbstractFactory\Infrastructure\Adapter\Out\Provider\ProviderSelectorFactory

    # === Builder ===
    App\GofPatterns\Builder\Interface\Adapter\In\BuilderCommand: ~
    App\GofPatterns\Builder\Interface\Adapter\Out\StripeUrlBuilderFactory: ~
    App\GofPatterns\Builder\Application\Port\Out\StripeUrlBuilderFactoryInterface:
        alias: App\GofPatterns\Builder\Interface\Adapter\Out\StripeUrlBuilderFactory

    # === Singleton ===
    App\GofPatterns\Singleton\Infrastructure\Adapter\In\SingletonCommand: ~

    # === Prototype ===
    App\GofPatterns\Prototype\Infrastructure\Adapter\In\PrototypeCommand: ~

    # === Adapter ===
    App\GofPatterns\Adapter\Infrastructure\Logging\Transport\ExternalFileLogger:
        arguments:
            $filePath: '%kernel.project_dir%/var/log/adapter.log'
    App\GofPatterns\Adapter\Infrastructure\Logging\Transport\ExternalFileLoggerInterface:
        alias: App\GofPatterns\Adapter\Infrastructure\Logging\Transport\ExternalFileLogger
    App\GofPatterns\Adapter\Infrastructure\Logging\FileLoggerAdapter:
        arguments:
            $logger: '@App\GofPatterns\Adapter\Infrastructure\Logging\Transport\ExternalFileLogger'
    App\GofPatterns\Adapter\Infrastructure\Adapter\In\AdapterCommand:
        arguments:
            $logger: '@App\GofPatterns\Adapter\Infrastructure\Logging\FileLoggerAdapter'

    # === Decorator ===
    App\GofPatterns\Decorator\Infrastructure\Persistence\DbProductRepository: ~
    App\GofPatterns\Decorator\Infrastructure\Cache\InMemory\TimedCache:
        arguments:
            $defaultTtlSeconds: 300 # 5 min

    App\GofPatterns\Decorator\Infrastructure\Decorator\CachedProductRepository:
        arguments:
            $inner: '@App\GofPatterns\Decorator\Infrastructure\Persistence\DbProductRepository'
            $cache: '@App\GofPatterns\Decorator\Infrastructure\Cache\InMemory\TimedCache'

    App\GofPatterns\Decorator\Domain\Port\ProductRepository:
        alias: App\GofPatterns\Decorator\Infrastructure\Decorator\CachedProductRepository

    App\GofPatterns\Decorator\Application\UseCase\GetProductsByIds: ~
    App\GofPatterns\Decorator\Infrastructure\Adapter\In\DecoratorCommand:
        arguments:
            $useCase: '@App\GofPatterns\Decorator\Application\UseCase\GetProductsByIds'
